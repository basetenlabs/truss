bundled_packages_dir: packages
data_dir: data
description: |
  This is an example of a truss that shares GPU across multiple models. This truss serves
  three models: a text to image model, an image to image model and an in-painting mode.
  Specific model can be targeted by providing `model_sub_name` in the request dictionary. Please
  refers to examples.yaml for examples.
  A model is loaded into GPU memory when needed. When a different model is invoked, then the previous
  one is offloaded and replaced with the new one. All models remain in the regular memory though, so that
  moving them to GPU memory later is faster.
environment_variables: {}
examples_filename: examples.yaml
external_package_dirs: []
input_type: Any
live_reload: false
model_class_filename: model.py
model_class_name: Model
model_framework: custom
model_metadata: {}
model_module_dir: model
model_name: null
model_type: custom
python_version: py39
requirements:
- diffusers
- xformers
- triton
- transformers
resources:
  accelerator: A10G
  cpu: "3"
  memory: "14Gi"
  use_gpu: true
secrets: {}
spec_version: '2.0'
system_packages: []
