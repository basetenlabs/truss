name: Detect Versions
description: Detect truss versions
outputs:
  version_changed:
    description: Did the version change
    value: ${{ steps.versions.outputs.version_changed }}
  new_version:
    description: Value of new version
    value: ${{ steps.versions.outputs.new_version }}
  new_base_image_version:
    description: new base image version
    value: ${{ steps.versions.outputs.new_base_image_version }}
  build_base_images:
    description: should build base images
    value:  ${{ steps.versions.outputs.build_base_images }}
  release_version:
    description: should release version
    value:  ${{ steps.versions.outputs.release_version }}
  is_prerelease_version:
    description: is it a prerelease version
    value:  ${{ steps.versions.outputs.is_prerelease_version }}
runs:
  using: "composite"
  steps:
    - run: curl -sSL https://install.python-poetry.org | python3 -
      shell: bash
    - id: versions
      shell: bash
      run: |
        NEW_VERSION=$(poetry version | awk '{print $2}')
        NEW_BASE_IMAGE_VERSION=$(grep TRUSS_BASE_IMAGE_VERSION_TAG truss/contexts/image_builder/util.py | cut -d'=' -f2 | cut -d'"' -f2)

        git checkout HEAD^1 -- pyproject.toml truss/contexts/image_builder/util.py
        OLD_VERSION=$(poetry version | awk '{print $2}')
        OLD_BASE_IMAGE_VERSION=$(grep TRUSS_BASE_IMAGE_VERSION_TAG truss/contexts/image_builder/util.py | cut -d'=' -f2 | cut -d'"' -f2)

        # Put back things into place
        git checkout HEAD -- pyproject.toml truss/contexts/image_builder/util.py

        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "new_base_image_version=$NEW_BASE_IMAGE_VERSION" >> $GITHUB_OUTPUT

        if [[ "$NEW_VERSION" != "$OLD_VERSION" ]]; then
          echo "version_changed=true" >> $GITHUB_OUTPUT
          if [[ "$NEW_VERSION" == *"dev"* ]]; then
            echo "release_version=false" >> $GITHUB_OUTPUT
          else
            echo "release_version=true" >> $GITHUB_OUTPUT
            if [[ "$NEW_VERSION" == *"rc"* ]]; then
              echo "is_prerelease_version=true" >> $GITHUB_OUTPUT
            else
              echo "is_prerelease_version=false" >> $GITHUB_OUTPUT
            fi
          fi
        else
          echo "version_changed=false" >> $GITHUB_OUTPUT
        fi

        if [[ "$NEW_BASE_IMAGE_VERSION" != "$OLD_BASE_IMAGE_VERSION" ]]; then
          echo "build_base_images=true" >> $GITHUB_OUTPUT
        else
          echo "build_base_images=false" >> $GITHUB_OUTPUT
        fi
