name: main - post-commit

on:
  workflow_dispatch: # Allows running from actions tab
  push:
    branches:
      - main

concurrency:
  group: main-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  integration-tests:
    uses: ./.github/workflows/_shared_integration_tests.yml

  publish-to-pypi:
    needs: [integration-tests]
    if: ${{ !failure() && !cancelled() && needs.integration-tests.outputs.release_version == 'true' && needs.integration-tests.outputs.release_version.is_prerelease_version == 'true' }}
    runs-on: ubuntu-20.04
    steps:
      - name: "Git tag release"
        uses: actions/checkout@v4
        with:
          token: ${{secrets.BASETENBOT_GITHUB_TOKEN}}
      - run: |
          NEW_VERSION=v${{ needs.integration-tests.outputs.new_version }}
          git config --global user.name "Github action"
          git config --global user.email "github.action@baseten.co"

          git tag -a $NEW_VERSION -m "Release $NEW_VERSION"
          git push origin $NEW_VERSION

      - uses: ./.github/actions/setup-python/

      - name: Install poetry packages
        run: poetry install --no-dev

      - name: Build
        run: poetry build

      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: "dist/*"
          token: ${{ secrets.BASETENBOT_GITHUB_TOKEN }}
          draft: false
          prerelease: ${{ needs.integration-tests.outputs.is_prerelease_version }}
          generateReleaseNotes: true
          makeLatest: true
          skipIfReleaseExists: true
          tag: "v${{ needs.integration-tests.outputs.new_version }}"

      - name: Publish to PyPI
        if: ${{ github.event_name != 'pull_request' }}
        run: poetry publish -u "${{ secrets.PYPI_USERNAME }}" -p "${{ secrets.PYPI_PASSWORD }}"
