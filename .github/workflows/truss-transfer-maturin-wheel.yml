# This file is autogenerated by maturin v1.8.1
# To update, run
#
#    maturin generate-ci github
#
name: truss-transfer-maturin-wheel

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
    # paths:
    #     - 'truss-transfer/**'
  pull_request:
    # paths:
    #   - 'truss-transfer/**'
  workflow_dispatch:

permissions:
  contents: read

defaults:
  run:
    working-directory: truss-transfer

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    defaults:
      run:
        working-directory: truss-transfer
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
          # - runner: ubuntu-22.04
          #   target: s390x
          - runner: ubuntu-22.04
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: truss-transfer
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
          before-script-linux: |
            if command -v apt-get &> /dev/null; then
                apt-get update && apt-get install -y pkg-config libssl-dev libatomic-ops-dev
            elif command -v yum &> /dev/null; then
                yum install -y pkgconf openssl-devel devtoolset-10-libatomic-devel perl-IPC-Cmd
            elif command -v dnf &> /dev/null; then
                dnf install -y pkgconf openssl-devel libatomic
            elif command -v apk &> /dev/null; then
                apk add --no-cache pkgconf openssl-dev
            else
                echo "No supported package manager found. Install OpenSSL manually."
                exit 1
            fi
      # - name: Build free-threaded wheels
      #   uses: PyO3/maturin-action@v1
      #   with:
      #     target: ${{ matrix.platform.target }}
      #     args: --release --out dist -i python3.13t
      #     sccache: 'true'
      #     manylinux: auto
      #     before-script-linux: |
      #       if command -v apt-get &> /dev/null; then
      #           apt-get update && apt-get install libssl-dev libatomic-ops-dev -y
      #       elif command -v yum &> /dev/null; then
      #           yum install openssl-devel devtoolset-10-libatomic-devel perl-IPC-Cmd -y
      #       else
      #           echo "Neither apt-get nor yum is installed. Please install a package manager."
      #           exit 1
      #       fi
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    defaults:
      run:
        working-directory: truss-transfer
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: truss-transfer
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: musllinux_1_2
      # - name: Build free-threaded wheels
      #   uses: PyO3/maturin-action@v1
      #   with:
      #     target: ${{ matrix.platform.target }}
      #     args: --release --out dist -i python3.13t
      #     sccache: 'true'
      #     manylinux: musllinux_1_2
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    defaults:
      run:
        working-directory: truss-transfer
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: truss-transfer
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          # - name: Build free-threaded wheels
          #   uses: PyO3/maturin-action@v1
          #   with:
          #     target: ${{ matrix.platform.target }}
          #     args: --release --out dist -i python3.13t
          #     sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    defaults:
      run:
        working-directory: truss-transfer
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: truss-transfer
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      # - name: Build free-threaded wheels
      #   uses: PyO3/maturin-action@v1
      #   with:
      #     target: ${{ matrix.platform.target }}
      #     args: --release --out dist -i python3.13t
      #     sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: truss-transfer
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, musllinux, windows, macos, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'wheels-*/*'
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          working-directory: truss-transfer
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
