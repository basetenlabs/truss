ARG PYVERSION={{config.python_version}}
FROM {{base_image_name_and_tag}}

{% if config.base_image %}
    {% block fail_fast %}
        RUN grep -w ID=debian /etc/os-release || { echo "Supplied base image is not a debian image"; exit 1; }
        RUN major=$(python -c"import sys; print(sys.version_info.major)") &&  [ $major = 3 ]  || { echo "ERROR: Supplied base image does not have python3"; unset major; exit 1; }
        RUN minor=$(python -c"import sys; print(sys.version_info.minor)") && [ $minor >= 8] && [ $minor <= 10 ] || { echo "WARNING: Supplied base image does not have 3.8 <= python <= 3.10"; unset minor; }
    {% endblock %}

    {% block rebuild_base %}
        {% if use_gpu %}
            # Allow statements and log messages to immediately appear in the Knative logs
            ENV PYTHONUNBUFFERED True
            ENV DEBIAN_FRONTEND=noninteractive

            RUN apt update && \
                apt install -y bash \
                            build-essential \
                            git \
                            curl \
                            ca-certificates \
                            software-properties-common && \
                add-apt-repository -y ppa:deadsnakes/ppa && \
                apt update -y && \
                apt install -y python{{python_version}} && \
                apt install -y python{{python_version}}-distutils && \
                apt install -y python{{python_version}}-venv && \
                rm -rf /var/lib/apt/lists

            RUN ln -sf /usr/bin/python{{python_version}} /usr/bin/python3 && \
                curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \
                python3 get-pip.py

            RUN python3 -m pip install --no-cache-dir --upgrade pip
        {% else %}
            RUN apt update && apt install -y

            # Allow statements and log messages to immediately appear in the Knative logs
            ENV PYTHONUNBUFFERED True
        {% endif %}

        RUN pip install --no-cache-dir --upgrade pip \
            && rm -rf /root/.cache/pip

        COPY ./requirements.txt requirements.txt
        RUN pip install --no-cache-dir -r requirements.txt \
            && rm -rf /root/.cache/pip

        # This is a hack, kfserving uses table_logger, which doesn't work well with
        # numpy 1.24 onwards, where np.float and np.int have been remove.
        # https://github.com/AleksTk/table-logger/blob/v0.3.6/table_logger/table_logger.py#L80
        # Monkey patch table_logger here. Ultimately we should move away from kfserving,
        # perhaps to kserve.
        RUN find /usr/local/lib/ -name table_logger.py -exec sed -i '/np\.int:/d;/np\.float:/d' {} \;

        {% if live_reload %}
        COPY ./control /control
        RUN python3 -m venv /control/.env \
            && /control/.env/bin/pip3 install -r /control/requirements.txt
        {% endif %}
    {% endblock %}
{% endif %}

RUN pip install --upgrade pip --no-cache-dir \
    && rm -rf /root/.cache/pip
{% if config.model_framework.value == 'huggingface_transformer' %}
    {% if config.resources.use_gpu %}
# HuggingFace pytorch gpu support needs mkl
RUN pip install mkl
    {% endif %}
{% endif%}

{% block post_base %}
{% endblock %}

{% block install_system_requirements %}
    {%- if should_install_system_requirements %}
COPY ./system_packages.txt system_packages.txt
RUN apt-get update && apt-get install --yes --no-install-recommends $(cat system_packages.txt) \
    && apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*
    {%- endif %}
{% endblock %}


{% block install_requirements %}
    {%- if should_install_requirements %}
COPY ./requirements.txt requirements.txt
RUN pip install -r requirements.txt --no-cache-dir && rm -rf /root/.cache/pip
    {%- endif %}
{% endblock %}


ENV APP_HOME /app
WORKDIR $APP_HOME


{% block app_copy %}
{% endblock %}

{% block bundled_packages_copy %}
    {%- if bundled_packages_dir_exists %}
COPY ./{{config.bundled_packages_dir}} /packages
    {%- endif %}
{% endblock %}


{% for env_var_name, env_var_value in config.environment_variables.items() %}
ENV {{ env_var_name }} {{ env_var_value }}
{% endfor %}


{% block run %}
{% endblock %}
