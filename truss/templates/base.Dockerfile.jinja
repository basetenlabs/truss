ARG PYVERSION={{config.python_version}}
FROM {{base_image_name_and_tag}}

{% block fail_fast %}
RUN grep -w 'ID=debian\|ID_LIKE=debian' /etc/os-release || { echo "ERROR: Supplied base image is not a debian image"; exit 1; }
RUN which python && python --version | grep -E '3\.[0-9]|10\.[0-9][0-9]' || \
    which python3 && python3 --version | grep -E '3\.[0-9]|10\.[0-9][0-9]' || \
    { echo "ERROR: Supplied base image does not have 3.8 <= python <= 3.10"; exit 1; }
{% endblock %}

# If user base image is supplied in config, apply build commands from truss base image
{% if config.base_image %}
ENV PYTHONUNBUFFERED True
ENV DEBIAN_FRONTEND=noninteractive

RUN apt update && \
    apt install -y bash \
                build-essential \
                git \
                curl \
                ca-certificates \
                software-properties-common

RUN pip install --no-cache-dir --upgrade pip \
    && rm -rf /root/.cache/pip

COPY ./requirements.txt requirements.txt
RUN pip install --no-cache-dir -r requirements.txt \
    && rm -rf /root/.cache/pip

# This is a hack, kfserving uses table_logger, which doesn't work well with
# numpy 1.24 onwards, where np.float and np.int have been remove.
# https://github.com/AleksTk/table-logger/blob/v0.3.6/table_logger/table_logger.py#L80
# Monkey patch table_logger here. Ultimately we should move away from kfserving,
# perhaps to kserve.
RUN find /usr/local/lib/ -name table_logger.py -exec sed -i '/np\.int:/d;/np\.float:/d' {} \;

{% if live_reload %}
COPY ./control /control
RUN python3 -m venv /control/.env \
    && /control/.env/bin/pip3 install -r /control/requirements.txt
{% endif %}
{% endif %}

RUN pip install --upgrade pip --no-cache-dir \
    && rm -rf /root/.cache/pip
{% if config.model_framework.value == 'huggingface_transformer' %}
    {% if config.resources.use_gpu %}
# HuggingFace pytorch gpu support needs mkl
RUN pip install mkl
    {% endif %}
{% endif%}

{% block post_base %}
{% endblock %}

{% block install_system_requirements %}
    {%- if should_install_system_requirements %}
COPY ./system_packages.txt system_packages.txt
RUN apt-get update && apt-get install --yes --no-install-recommends $(cat system_packages.txt) \
    && apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*
    {%- endif %}
{% endblock %}


{% block install_requirements %}
    {%- if should_install_requirements %}
COPY ./requirements.txt requirements.txt
RUN pip install -r requirements.txt --no-cache-dir && rm -rf /root/.cache/pip
    {%- endif %}
{% endblock %}

{% block b10cp %}
{% endblock %}


ENV APP_HOME /app
WORKDIR $APP_HOME


{% block app_copy %}
{% endblock %}

{% block bundled_packages_copy %}
    {%- if bundled_packages_dir_exists %}
COPY ./{{config.bundled_packages_dir}} /packages
    {%- endif %}
{% endblock %}


{% for env_var_name, env_var_value in config.environment_variables.items() %}
ENV {{ env_var_name }} {{ env_var_value }}
{% endfor %}


{% block run %}
{% endblock %}
