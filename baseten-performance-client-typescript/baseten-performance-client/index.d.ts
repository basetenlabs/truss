/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface BasetenError {
  code: string
  statusCode?: number
  message: string
}
export interface OpenAiEmbeddingData {
  object: string
  embeddingInternal: JsonValue
  index: number
}
export interface OpenAiUsage {
  promptTokens: number
  totalTokens: number
}
export interface OpenAiEmbeddingsResponse {
  object: string
  data: Array<OpenAiEmbeddingData>
  model: string
  usage: OpenAiUsage
  totalTime?: number
  individualRequestTimes?: Array<number>
}
export interface RerankResult {
  index: number
  score: number
  text?: string
}
export interface RerankResponse {
  object: string
  data: Array<RerankResult>
  totalTime?: number
  individualRequestTimes?: Array<number>
}
export interface ClassificationResult {
  label: string
  score: number
}
export interface ClassificationResponse {
  object: string
  data: Array<Array<ClassificationResult>>
  totalTime?: number
  individualRequestTimes?: Array<number>
}
export interface BatchPostResponse {
  data: Array<JsonValue>
  totalTime: number
  individualRequestTimes: Array<number>
  responseHeaders: Array<JsonValue>
}
export declare class PerformanceClient {
  constructor(baseUrl: string, apiKey?: string | undefined | null)
  embed(input: Array<string>, model: string, encodingFormat?: string | undefined | null, dimensions?: number | undefined | null, user?: string | undefined | null, maxConcurrentRequests?: number | undefined | null, batchSize?: number | undefined | null, timeoutS?: number | undefined | null): Promise<OpenAiEmbeddingsResponse>
  rerank(query: string, texts: Array<string>, rawScores?: boolean | undefined | null, returnText?: boolean | undefined | null, truncate?: boolean | undefined | null, truncationDirection?: string | undefined | null, maxConcurrentRequests?: number | undefined | null, timeoutS?: number | undefined | null): Promise<RerankResponse>
  classify(inputs: Array<string>, rawScores?: boolean | undefined | null, truncate?: boolean | undefined | null, truncationDirection?: string | undefined | null, maxConcurrentRequests?: number | undefined | null, batchSize?: number | undefined | null, timeoutS?: number | undefined | null): Promise<ClassificationResponse>
  batchPost(urlPath: string, payloads: Array<JsonValue>, maxConcurrentRequests?: number | undefined | null, timeoutS?: number | undefined | null): Promise<BatchPostResponse>
}
